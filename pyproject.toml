[project]
name = "datashuttle"
authors = [
    {name = "Joe Ziminski", email = "j.ziminski@ucl.ac.uk"},
    {name = "Adam Tyson", email = "code@adamltyson.com"},
    {name = "Niko Sirmpilatze", email = "niko.sirbiladze@gmail.com"},
]
description = "DataShuttle automates the creation, validation and transfer of neuroscience project folders."
readme = "README.md"
requires-python = ">=3.9.0"
dynamic = ["version"]
license = {text = "BSD-3-Clause"}

dependencies = [
    "paramiko",
    "PyYAML",
    "requests",
    "rich",
    "fancylog>=0.4.2",
    "simplejson",
    "pyperclip",
    "textual==3.4.0",
    "show-in-file-manager",
    "gitpython",
    "typeguard",
    "psutil"
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: BSD License",
]

[project.urls]
"Bug Tracker" = "https://github.com/neuroinformatics-unit/datashuttle/issues"
Documentation = "https://datashuttle.neuroinformatics.dev"
"Source Code" = "https://github.com/neuroinformatics-unit/datashuttle"
"User support" = "https://github.com/neuroinformatics-unit/datashuttle/discussions"

[project.optional-dependencies]
dev = [
    "pandas",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "coverage",
    "tox",
    "mypy",
    "pre-commit",
    "ruff",
    "setuptools_scm",
    "textual-dev",
    "types-requests",
    "types-PyYAML",
    "types-appdirs",
    "types-paramiko",
    "types-simplejson",
    "pandas-stubs",
    "types-setuptools",
    "pytest-asyncio",
    "validators",
]

[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "setuptools_scm[toml]>=6.2",
]
build-backend = "setuptools.build_meta"

[tool.mypy]
exclude = [
    "tests/"
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["datashuttle*"]
exclude = ["tests*", "docs*"]

[tool.pytest.ini_options]
addopts = "--cov=datashuttle"

[tool.ruff]
line-length = 79
exclude = ["__init__.py","build",".eggs"]
fix = true

# Ruff config is not exactly the same as in the movement repo, as
# currently we are only adding linting enforcement to docstrings.
# Other ruff rules that are also present in movement repo can be
# added here in a separate PR after these changes have been merged.

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/

ignore = [
    "E203",  # whitespace before ':' (conflicts with Black)
    "E501",  # line too long (handled by Black)
    "E731",  # do not assign a lambda expression, use a def
    "C901",  # function is too complex
    "W291",  # trailing whitespace
    "W293",  # blank line contains whitespace
    "E402",  # module level import not at top of file
    "E722",  # do not use bare 'except'
    "D100",  # missing docstring in public module
    "D203",  # 1 blank line required before class docstring (conflicts with D211)
    "D213",  # multi-line docstring summary should start at the second line (conflicts with D212)
]
select = [
    "I",        # isort
    "E",        # pycodestyle errors
    "F",        # Pyflakes
    "TC",       # flake8-type-checking
    "TID252",   # flake8-tidy-imports relative-imports
    "D",        # pydocstyle
]
per-file-ignores = { "tests/*" = [
    "D"  # ignore docstring formatting in tests for now
], "examples/*" = [
    "D400", # first line should end with a period.
    "D415", # first line should end with a period, question mark...
    "D205", # missing blank line between summary and description
]}

[tool.ruff.format]
docstring-code-format = true # Also format code in docstrings

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.setuptools_scm]

[tool.check-manifest]
ignore = [
  "*.yaml",
  ".bumpversion.cfg",
  "tox.ini",
  "docs/*",
  "docs/source/*",
  "docs/source/pages/*",
  "tests/*",
  "tests/tests_unit/*",
  "tests/tests_integration/*",
  ".flake8"
]

[project.scripts]
datashuttle = "datashuttle.tui_launcher:main"

[tool.codespell]
skip = '.git,*.pdf,*.svg'
#
# ignore-words-list = ''
